
/**
 * 获取结构的ResourceKey
 * @param {Special.Structure} structureName  
 */
function structureKey(structureName) { return $ResourceKey.create($Registries.STRUCTURE, structureName) }

/**
 * 检测坐标是否在结构内，如果在则返回true
 * @param {$ServerLevel_} level
 * @param {$BlockPos$MutableBlockPos_} pos
 * @param {string} structureName
 */
let simpleCheckPosInStructure = (level, pos, structureName) =>
    !!level.structureManager().getStructureWithPieceAt(pos, structureKey(structureName)).getStructure()

const hordeSpawnStructure = [
    "modern_structures:boat",
    "modern_structures:bus",
    "modern_structures:cherryhouse",
    "modern_structures:dungeon",
    "modern_structures:factory",
    "modern_structures:factory_2",
    "modern_structures:firewatchtower",
    "modern_structures:frozenboat",
    "modern_structures:littlehouse",
    "modern_structures:oildrill",
    "modern_structures:outpost",
    "modern_structures:outpost_2",
    "modern_structures:plainhous_2",
    "modern_structures:plainhouse_1",
    "modern_structures:planting",
    "modern_structures:stable",
    "modern_structures:submarine",
    "modern_structures:trappedtruck",
    "modern_structures:trappedtruck_2",
    "zombie_extreme:build_1",
    "zombie_extreme:caffe",
    "zombie_extreme:gas_station_1",
    "zombie_extreme:light_house",
    "zombie_extreme:modern_house_1",
    "zombie_extreme:ruin_1",
    "zombie_extreme:ruin_2",
    "zombie_extreme:ruin_3",
    "zombie_extreme:ruin_4",
    "zombie_extreme:ruin_5",
    "zombiekit:gathering_camps",
    "zombiekit:jungle_shelter",
    "zombiekit:pond",
    "zombiekit:prison",
    "zombiekit:shelter",
    "zombiekit:touring_car",
    "repurposed_structures:ancient_city_end",
    "repurposed_structures:ancient_city_nether",
    "repurposed_structures:ancient_city_ocean",
    "repurposed_structures:bastion_underground",
    "repurposed_structures:city_nether",
    "repurposed_structures:city_overworld",
    "repurposed_structures:fortress_jungle",
    "repurposed_structures:igloo_grassy",
    "repurposed_structures:igloo_mangrove",
    "repurposed_structures:igloo_mushroom",
    "repurposed_structures:igloo_stone",
    "repurposed_structures:mansion_birch",
    "repurposed_structures:mansion_desert",
    "repurposed_structures:mansion_jungle",
    "repurposed_structures:mansion_mangrove",
    "repurposed_structures:mansion_oak",
    "repurposed_structures:mansion_savanna",
    "repurposed_structures:mansion_snowy",
    "repurposed_structures:mansion_taiga",
    "repurposed_structures:mineshaft_birch",
    "repurposed_structures:mineshaft_crimson",
    "repurposed_structures:mineshaft_dark_forest",
    "repurposed_structures:mineshaft_desert",
    "repurposed_structures:mineshaft_end",
    "repurposed_structures:mineshaft_icy",
    "repurposed_structures:mineshaft_jungle",
    "repurposed_structures:mineshaft_nether",
    "repurposed_structures:mineshaft_ocean",
    "repurposed_structures:mineshaft_savanna",
    "repurposed_structures:mineshaft_stone",
    "repurposed_structures:mineshaft_swamp",
    "repurposed_structures:mineshaft_taiga",
    "repurposed_structures:mineshaft_warped",
    "repurposed_structures:monument_desert",
    "repurposed_structures:monument_icy",
    "repurposed_structures:monument_jungle",
    "repurposed_structures:monument_nether",
    "repurposed_structures:outpost_badlands",
    "repurposed_structures:outpost_birch",
    "repurposed_structures:outpost_crimson",
    "repurposed_structures:outpost_desert",
    "repurposed_structures:outpost_end",
    "repurposed_structures:outpost_giant_tree_taiga",
    "repurposed_structures:outpost_icy",
    "repurposed_structures:outpost_jungle",
    "repurposed_structures:outpost_mangrove",
    "repurposed_structures:outpost_nether_brick",
    "repurposed_structures:outpost_oak",
    "repurposed_structures:outpost_snowy",
    "repurposed_structures:outpost_taiga",
    "repurposed_structures:outpost_warped",
    "repurposed_structures:pyramid_badlands",
    "repurposed_structures:pyramid_dark_forest",
    "repurposed_structures:pyramid_end",
    "repurposed_structures:pyramid_flower_forest",
    "repurposed_structures:pyramid_giant_tree_taiga",
    "repurposed_structures:pyramid_icy",
    "repurposed_structures:pyramid_jungle",
    "repurposed_structures:pyramid_mushroom",
    "repurposed_structures:pyramid_nether",
    "repurposed_structures:pyramid_ocean",
    "repurposed_structures:pyramid_snowy",
    "repurposed_structures:ruined_portal_end",
    "repurposed_structures:ruins_land_cold",
    "repurposed_structures:ruins_land_hot",
    "repurposed_structures:ruins_land_icy",
    "repurposed_structures:ruins_land_warm",
    "repurposed_structures:ruins_nether",
    "repurposed_structures:shipwreck_crimson",
    "repurposed_structures:shipwreck_end",
    "repurposed_structures:shipwreck_nether_bricks",
    "repurposed_structures:shipwreck_warped",
    "repurposed_structures:stronghold_end",
    "repurposed_structures:stronghold_nether",
    "repurposed_structures:temple_nether_basalt",
    "repurposed_structures:temple_nether_crimson",
    "repurposed_structures:temple_nether_soul",
    "repurposed_structures:temple_nether_warped",
    "repurposed_structures:temple_nether_wasteland",
    "repurposed_structures:temple_ocean",
    "repurposed_structures:temple_taiga",
    "repurposed_structures:village_badlands",
    "repurposed_structures:village_bamboo",
    "repurposed_structures:village_birch",
    "repurposed_structures:village_cherry",
    "repurposed_structures:village_crimson",
    "repurposed_structures:village_dark_forest",
    "repurposed_structures:village_giant_taiga",
    "repurposed_structures:village_jungle",
    "repurposed_structures:village_mountains",
    "repurposed_structures:village_mushroom",
    "repurposed_structures:village_oak",
    "repurposed_structures:village_ocean",
    "repurposed_structures:village_swamp",
    "repurposed_structures:village_warped",
    "repurposed_structures:witch_hut_birch",
    "repurposed_structures:witch_hut_dark_forest",
    "repurposed_structures:witch_hut_giant_tree_taiga",
    "repurposed_structures:witch_hut_mangrove",
    "repurposed_structures:witch_hut_oak",
    "repurposed_structures:witch_hut_taiga",
    "abandoned_urban:road_4way",
    "abandoned_urban:ff_restaurant",
    "abandoned_urban:brick_apartment",
    "abandoned_urban:jungle_apartment",
    "abandoned_urban:park",
    "abandoned_urban:apartments_three",
    "abandoned_urban:bus_stop",
    "abandoned_urban:dead_end",
    "abandoned_urban:stonedebris_2",
    "abandoned_urban:stonedebris_3",
    "abandoned_urban:stonedebris_1",
    "abandoned_urban:wooddebris_3",
    "abandoned_urban:wooddebris_2",
    "abandoned_urban:wooddebris_1",
    "abandoned_urban:trash_1",
    "abandoned_urban:trash_2",
    "abandoned_urban:trash_3",
    "abandoned_urban:trash_4",
    "abandoned_urban:road_corner",
    "abandoned_urban:road_t",
    "abandoned_urban:road_straight",
    "abandoned_urban:military",
    "abandoned_urban:bigrig",
    "abandoned_urban:school_bus",
    "abandoned_urban:bus",
    "abandoned_urban:fire_tower",
    "abandoned_urban:gas_station_loot",
    "abandoned_urban:motel",
    "abandoned_urban:observatory",
    "abandoned_urban:plane_crash",
    "abandoned_urban:train",
    "mvs:beach_bar",
    "mvs:cartographer_tower",
    "mvs:cathedral",
    "mvs:crystal",
    "mvs:horse_pen",
    "mvs:jungle_tower",
    "mvs:out_house",
    "mvs:railway",
    "mvs:shed",
    "mvs:small_pillager_tower",
    "mvs:small_ship",
    "mvs:stone_fountain",
    "mvs:sunzi_gate",
    "mvs:carts/cart",
    "mvs:carts/large_cart_1",
    "mvs:carts/large_cart_2",
    "mvs:carts/medium_bamboo_cart",
    "mvs:dead_tree/acacia",
    "mvs:dead_tree/birch",
    "mvs:dead_tree/cherry",
    "mvs:dead_tree/dark_oak",
    "mvs:dead_tree/jungle",
    "mvs:dead_tree/mangrove",
    "mvs:dead_tree/oak",
    "mvs:dead_tree/spruce",
    "mvs:houses/azelea_house",
    "mvs:houses/barn",
    "mvs:houses/deepslate_house",
    "mvs:houses/desert_house",
    "mvs:houses/flower_hole",
    "mvs:houses/house",
    "mvs:houses/large_floating_island",
    "mvs:houses/large_warped_tower",
    "mvs:houses/medium_igloo_1",
    "mvs:houses/medium_igloo_2",
    "mvs:houses/small_igloo",
    "mvs:houses/small_swamp_house",
    "mvs:houses/tall_house",
    "mvs:houses/warped_house",
    "mvs:lantern/medium_oak_lantern",
    "mvs:lantern/small_acacia_lantern",
    "mvs:lantern/small_bamboo_lantern",
    "mvs:lantern/small_birch_lantern",
    "mvs:lantern/small_campfire_lantern",
    "mvs:lantern/small_cherry_lantern",
    "mvs:lantern/small_dark_oak_lantern",
    "mvs:lantern/small_jungle_lantern",
    "mvs:lantern/small_mangrove_lantern",
    "mvs:lantern/small_oak_lantern",
    "mvs:lantern/small_spruce_lantern",
    "mvs:log_pile/acacia_log_pile",
    "mvs:log_pile/birch_log_pile",
    "mvs:log_pile/dark_oak_log_pile",
    "mvs:log_pile/jungle_log_pile",
    "mvs:log_pile/oak_log_pile",
    "mvs:log_pile/spruce_log_pile",
    "mvs:nature/acacia_tree",
    "mvs:nature/big_oak_tree",
    "mvs:nature/birch_tree",
    "mvs:nature/boulder",
    "mvs:nature/cherry_tree",
    "mvs:nature/dark_oak_tree",
    "mvs:nature/floating_islands",
    "mvs:nature/jungle_palm_tree",
    "mvs:nature/jungle_tree",
    "mvs:nature/large_mushroom",
    "mvs:nature/mushroom_pond",
    "mvs:nature/oak_tree",
    "mvs:nature/paths",
    "mvs:nature/small_oak_pond",
    "mvs:nature/spruce_tree",
    "mvs:nature/stone_rock",
    "mvs:other_decoration/bee_dome",
    "mvs:other_decoration/bench",
    "mvs:other_decoration/campsite",
    "mvs:other_decoration/crimson_enchanting_table",
    "mvs:other_decoration/desert_pump",
    "mvs:other_decoration/duck",
    "mvs:other_decoration/fire_camp",
    "mvs:other_decoration/fox_hut",
    "mvs:other_decoration/haystack",
    "mvs:other_decoration/horse_campsite",
    "mvs:other_decoration/lamp_chest",
    "mvs:other_decoration/lecturn_garden",
    "mvs:other_decoration/mine_with_campsite",
    "mvs:other_decoration/mushroom_statue",
    "mvs:other_decoration/nether_devil",
    "mvs:other_decoration/pile",
    "mvs:other_decoration/snowy_dog_hut",
    "mvs:other_decoration/snowy_fossil",
    "mvs:other_decoration/stone_bee",
    "mvs:other_decoration/villager_statue",
    "mvs:other_decoration/wheat_grain_bin",
    "mvs:other_decoration/windmill",
    "mvs:other_decoration/wooden_wheat_farm",
    "mvs:other_decoration/end_scraps/end_scraps_1",
    "mvs:other_decoration/end_scraps/end_scraps_2",
    "mvs:other_decoration/end_scraps/end_scraps_3",
    "mvs:other_decoration/end_scraps/end_scraps_4",
    "mvs:ruins/castle_ruins",
    "mvs:ruins/log_ruin",
    "mvs:ruins/ruined_beacon",
    "mvs:ruins/small_ruin",
    "mvs:ruins/statue_ruins",
    "mvs:ruins/stone_pillars",
    "mvs:ruins/tree_monument",
    "mvs:stall/red_stall",
    "mvs:stall/pink_stall",
    "mvs:stall/orange_stall",
    "mvs:stall/blue_stall",
    "mvs:well/well",
    "mvs:well/small_copper_well",
    "mvs:well/small_well",
    "mvs:well/wells/acacia_well",
    "mvs:well/wells/birch_well",
    "mvs:well/wells/dark_oak_well",
    "mvs:well/wells/desert_well",
    "mvs:well/wells/jungle_well",
    "mvs:well/wells/oak_well",
    "mvs:well/wells/rocky_well",
    "mvs:well/wells/snowy_well",
    "mvs:well/wells/spruce_well",
    "mvs:well/rare_well",
    "mvs:well/small_tower_well",
    "mvs:well/wells/end_well",
    "mvs:well/wells/mushroom_well",
    "mvs:well/wells/nether_well"
]

// 冷却时间，单位为游戏刻（10分钟）
const cooldownTime = 10 * 60 * 20;
// 触发尸潮的随机概率（例如1/100）
const hordeSpawnChance = 100 / 100;

// 检测玩家是否进入特定结构
PlayerEvents.tick(e => {
    let player = e.player;
    let level = player.level;
    let pos = player.blockPosition();
    let playerData = player.persistentData;
    let currentTime = level.dayTime();

    // 初始化 isInStructure 为 false
    let isInStructure = false;

    // 遍历所有可能触发尸潮的结构
    hordeSpawnStructure.forEach(structureName => {
        // 检查玩家是否在当前结构内
        if (simpleCheckPosInStructure(level, pos, structureName)) {
            isInStructure = true;
        }
    });

    // 增加玩家上次尸潮时间的nbt
    let lastTriggerTime = playerData.getInt("mryh:lastHordeTriggerTime"); // 如果没有则默认为0

    if (isInStructure) {
        // 检查是否超过冷却时间
        if (currentTime - lastTriggerTime >= cooldownTime) {
            // 随机概率触发尸潮
            if (Math.random() < hordeSpawnChance) {
                // 更新玩家的触发时间
                playerData.putInt("mryh:lastHordeTriggerTime", currentTime);
                let day = Math.floor(level.dayTime() / 24000);
                let hordeType = updateHordeType(day); // 根据天数更新尸潮类型
                player.tell("尸潮即将来袭！");
                player.runCommandSilent(`/hordes spawnWave ${player.name.string} 10 ${hordeType}`);
            }
        }
    }
});
